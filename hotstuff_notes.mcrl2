% act
%     sendMessage, receiveMessage

% proc
%     % Process for Leader
%     % Process for Replica

%     Replica() = 
%     Leader(n: Nat, f: Nat, count: Nat) = (count < n = f) -> receiveMessage.Leader(n, f, count + 1) 
%                                         + (count >= n - f) -> sendMessage.Leader(n, f, 0) ;

% init
%     allow(
%         {sendMessage, receiveMessage},
%         comm(
%             {sendMessage | receiveMessage -> },
%         )
%     ) ;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

sort
    MessageType = struct newView ? isNewView
                        | prepare ? isPrepare
                        | preCommit ? isPreCommit
                        | commit ? isCommit
                        | decide ? isDecide; 

    Message = struct createMessage(type: MessageType, viewNumber: Nat);

map
    matchingMessage: Message # MessageType # Nat -> Bool;
    getMessageType: Message -> MessageType;
    getMessageView: Message -> Nat;
var
    messageToCheck: Message;
    t: MessageType;
    viewNum: Nat;

eqn
    getMessageType(createMessage(t, viewNum)) = 
        t;
    getMessageView(createMessage(t, viewNum)) =
        viewNum;
    matchingMessage(messageToCheck, t, viewNum) =
        ((isNewView(t) && isNewView(type(messageToCheck))) ||
        (isPrepare(t) && isPrepare(getMessageType(messageToCheck))) ||
        (isPreCommit(t) && isPreCommit(getMessageType(messageToCheck))) ||
        (isCommit(t) && isCommit(getMessageType(messageToCheck))) ||
        (isDecide(t) && isDecide(getMessageType(messageToCheck)))) &&
        (viewNum == getMessageView(messageToCheck));

act
    NewView;
    SendNewView: Message;
    ReceiveNewView: Message;
    Broadcast;
    SendVote: Message;
    ReceiveVote: Message;

proc
    % Process for Leader replica in the Prepare phase
    LeaderPrepare(n: Nat, f: Nat, newViewCount: Nat) = 
        (newViewCount < (n - f)) ->
        ReceiveNewView . LeaderPrepare(n, f, newViewCount + 1)
        +
        (newViewCount >= (n - f)) ->
        Broadcast . LeaderPrepare(n, f, 0);

    % Process for non-Leader replicas in the Prepare phase
    NonLeaderPrepare(id: Nat) =
        SendNewView(createMessage(newView, 1)) .
        NonLeaderPrepare(id);

    % % Process for Leader replica in the PreCommit phase
    % LeaderPreCommit()

    % % Process for non-Leader replicas in the PreCommit phase
    % NonLeaderPreCommit()

    % % Process for Leader replica in the Commit phase
    % LeaderCommit()

    % % Process for non-Leader replicas in the Commit phase
    % NonLeaderCommit()

    % % Process for the Leader replica in the Decide phase
    % LeaderDecide()

    % % Process for non-Leader replicas in the Decide phase
    % NonLeaderDecide()

init
    allow(
        {NewView, Broadcast},
        comm({
        ReceiveNewView|SendNewView -> NewView
        },
        LeaderPrepare(5, 2, 0) || NonLeaderPrepare(1) || NonLeaderPrepare(2) || NonLeaderPrepare(3) || NonLeaderPrepare(4)
        || NonLeaderPrepare(5)
        ));