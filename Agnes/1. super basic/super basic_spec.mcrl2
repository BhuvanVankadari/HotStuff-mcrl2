% Very basic model 
%Problem: a replica sends mor ethan 1 message

% sort Message_type = struct newView | prepare | preCommit | commit | decide;

% sort Message = struct message(type: Message_type, viewNum: Pos);

%n = 3f + 1
map n: Nat; % number of replicas
map f: Nat; %number of faulty replicas
map num_views: Pos; % number of views
 
eqn n = 2;
eqn f = 0;
eqn num_views = 2;

%calculate maximum element in a list
map maxList: List(Nat) -> Nat;

var a: Nat;
	list: List(Nat);

eqn maxList([]) = 0; %empty list
	maxList([a]) = a; %one element
	maxList(a |> list) = max(a, maxList(list)); %more than one element

act send_message, receive_message, send_broadcast, receive_broadcast,message_exchange, broadcast: Nat # Nat # Nat; % message, sender, receiver

proc Replica(id: Nat, currentView: Nat) = 
	 (sum i: Nat.(
     (id != i) ->(send_message(currentView,id,i).Replica(id,currentView) ))) +
	 sum k,j: Nat.receive_broadcast(k,j,id). delta;
	
proc Leader(id : Nat, highestview : List(Nat), count_msj : Nat) = 
	 (count_msj < n - f) -> sum i,j:Nat. receive_message(i,j,id).Leader(id, highestview <| i, count_msj + 1)
	 + (count_msj >= n - f)  -> sum i: Nat. send_broadcast(maxList(highestview), id, i). delta;

init allow({message_exchatxtnge, broadcast},
	 comm({ send_message|receive_message -> message_exchange,
			send_broadcast | receive_broadcast -> broadcast},
			Replica(1,1) || Leader(2,[],0)
	 ));










	